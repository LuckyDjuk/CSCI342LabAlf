lab 2 - git part                                               1.In Xcode or IntelliJ, create a new project without a git repository.            In command line, create a git repository for your project.Answer: To start a git repository you need to use “git init”. After you’ve done that you’ll need to add files to the project at hand. examples of this would be “gitt add *” or “git add *insert filename here*”2.What file is required to ignore some of the files in this repository? It’s quite common for projects with a git repository to have these, but sometimes they need to be created manually.What would the file look like for:                    •An Xcode Project                    •An Android Project (Eclipse or IntelliJ)                Implement this file for your project.Answe: You can create a file called gitignore, and git uses it do determine which files and directories to ignore. Example of Xcode gitignore: https://gist.github.com/adamgit/3786883Example of Android gitignore: https://gist.github.com/keyboardsurfer/32400223. Create a new branch called “Experiment”.What is the git command to see the current branch you are in?Answer: You can check what branch you’re in if you run the command “git branch”. This will show you all the branches that you have in you’re project and there will be a star next to the one you’re in.    4. In the Experiment branch, create a new NSObject subclass called ExperimentalModel. What is the git command to check the status of the repository?Answer: If you run “git status” you’ll get the current state of the repository. You’ll see here if there’s something to commit or what branch you’re on.5.Commit the changes you’ve made with this branch. What is the command to merge these changes with the master branch?Answer: The command git merge *insert branchname here* will try to merge that branch into the branch you’re in. For example you’ll be able to merge it into the master branch.        6.Name the git command that:•Removes ExperimentalModel without removing it from the local file system    Answer: git rm --keep-local *insert filename here*
•Removes ExperimentalModel and remove it from the local file system    Answer: git rm *insert filename here*